// Code generated by azure-service-operator-codegen. DO NOT EDIT.
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
package v1alpha1api20200601

import (
	"encoding/json"
	"github.com/Azure/azure-service-operator/v2/pkg/genruntime"
)

type EventSubscriptions_SpecARM struct {
	//APIVersion: API Version of the resource type, optional when apiProfile is used
	//on the template
	APIVersion EventSubscriptionsSpecAPIVersion `json:"apiVersion"`

	//Location: Location to deploy resource to
	Location *string `json:"location,omitempty"`

	//Name: Name of the event subscription. Event subscription names must be between 3
	//and 64 characters in length and should use alphanumeric letters only.
	Name string `json:"name"`

	//Properties: Properties of the Event Subscription.
	Properties EventSubscriptionPropertiesARM `json:"properties"`

	//Scope: A scope
	Scope *string `json:"scope,omitempty"`

	//Tags: Name-value pairs to add to the resource
	Tags map[string]string `json:"tags,omitempty"`

	//Type: Resource type
	Type EventSubscriptionsSpecType `json:"type"`
}

var _ genruntime.ARMResourceSpec = &EventSubscriptions_SpecARM{}

// GetAPIVersion returns the APIVersion of the resource
func (eventSubscriptionsSpecARM EventSubscriptions_SpecARM) GetAPIVersion() string {
	return string(eventSubscriptionsSpecARM.APIVersion)
}

// GetName returns the Name of the resource
func (eventSubscriptionsSpecARM EventSubscriptions_SpecARM) GetName() string {
	return eventSubscriptionsSpecARM.Name
}

// GetType returns the Type of the resource
func (eventSubscriptionsSpecARM EventSubscriptions_SpecARM) GetType() string {
	return string(eventSubscriptionsSpecARM.Type)
}

//Generated from: https://schema.management.azure.com/schemas/2020-06-01/Microsoft.EventGrid.json#/definitions/EventSubscriptionProperties
type EventSubscriptionPropertiesARM struct {
	//DeadLetterDestination: Information about the dead letter destination for an
	//event subscription. To configure a deadletter destination, do not directly
	//instantiate an object of this class. Instead, instantiate an object of a derived
	//class. Currently, StorageBlobDeadLetterDestination is the only class that
	//derives from this class.
	DeadLetterDestination *StorageBlobDeadLetterDestinationARM `json:"deadLetterDestination,omitempty"`

	//Destination: Information about the destination for an event subscription.
	Destination *EventSubscriptionDestinationARM `json:"destination,omitempty"`

	//EventDeliverySchema: The event delivery schema for the event subscription.
	EventDeliverySchema *EventSubscriptionPropertiesEventDeliverySchema `json:"eventDeliverySchema,omitempty"`

	//ExpirationTimeUtc: Expiration time of the event subscription.
	ExpirationTimeUtc *string `json:"expirationTimeUtc,omitempty"`

	//Filter: Filter for the Event Subscription.
	Filter *EventSubscriptionFilterARM `json:"filter,omitempty"`

	//Labels: List of user defined labels.
	Labels []string `json:"labels,omitempty"`

	//RetryPolicy: Information about the retry policy for an event subscription.
	RetryPolicy *RetryPolicyARM `json:"retryPolicy,omitempty"`
}

// +kubebuilder:validation:Enum={"2020-06-01"}
type EventSubscriptionsSpecAPIVersion string

const EventSubscriptionsSpecAPIVersion20200601 = EventSubscriptionsSpecAPIVersion("2020-06-01")

// +kubebuilder:validation:Enum={"Microsoft.EventGrid/eventSubscriptions"}
type EventSubscriptionsSpecType string

const EventSubscriptionsSpecTypeMicrosoftEventGridEventSubscriptions = EventSubscriptionsSpecType("Microsoft.EventGrid/eventSubscriptions")

//Generated from: https://schema.management.azure.com/schemas/2020-06-01/Microsoft.EventGrid.json#/definitions/EventSubscriptionDestination
type EventSubscriptionDestinationARM struct {
	//AzureFunctionEventSubscriptionDestination: Mutually exclusive with all other
	//properties
	AzureFunctionEventSubscriptionDestination *AzureFunctionEventSubscriptionDestinationARM `json:"azureFunctionEventSubscriptionDestination,omitempty"`

	//EventHubEventSubscriptionDestination: Mutually exclusive with all other
	//properties
	EventHubEventSubscriptionDestination *EventHubEventSubscriptionDestinationARM `json:"eventHubEventSubscriptionDestination,omitempty"`

	//HybridConnectionEventSubscriptionDestination: Mutually exclusive with all other
	//properties
	HybridConnectionEventSubscriptionDestination *HybridConnectionEventSubscriptionDestinationARM `json:"hybridConnectionEventSubscriptionDestination,omitempty"`

	//ServiceBusQueueEventSubscriptionDestination: Mutually exclusive with all other
	//properties
	ServiceBusQueueEventSubscriptionDestination *ServiceBusQueueEventSubscriptionDestinationARM `json:"serviceBusQueueEventSubscriptionDestination,omitempty"`

	//ServiceBusTopicEventSubscriptionDestination: Mutually exclusive with all other
	//properties
	ServiceBusTopicEventSubscriptionDestination *ServiceBusTopicEventSubscriptionDestinationARM `json:"serviceBusTopicEventSubscriptionDestination,omitempty"`

	//StorageQueueEventSubscriptionDestination: Mutually exclusive with all other
	//properties
	StorageQueueEventSubscriptionDestination *StorageQueueEventSubscriptionDestinationARM `json:"storageQueueEventSubscriptionDestination,omitempty"`

	//WebHookEventSubscriptionDestination: Mutually exclusive with all other properties
	WebHookEventSubscriptionDestination *WebHookEventSubscriptionDestinationARM `json:"webHookEventSubscriptionDestination,omitempty"`
}

// MarshalJSON defers JSON marshaling to the first non-nil property, because EventSubscriptionDestinationARM represents a discriminated union (JSON OneOf)
func (eventSubscriptionDestinationARM EventSubscriptionDestinationARM) MarshalJSON() ([]byte, error) {
	if eventSubscriptionDestinationARM.AzureFunctionEventSubscriptionDestination != nil {
		return json.Marshal(eventSubscriptionDestinationARM.AzureFunctionEventSubscriptionDestination)
	}
	if eventSubscriptionDestinationARM.EventHubEventSubscriptionDestination != nil {
		return json.Marshal(eventSubscriptionDestinationARM.EventHubEventSubscriptionDestination)
	}
	if eventSubscriptionDestinationARM.HybridConnectionEventSubscriptionDestination != nil {
		return json.Marshal(eventSubscriptionDestinationARM.HybridConnectionEventSubscriptionDestination)
	}
	if eventSubscriptionDestinationARM.ServiceBusQueueEventSubscriptionDestination != nil {
		return json.Marshal(eventSubscriptionDestinationARM.ServiceBusQueueEventSubscriptionDestination)
	}
	if eventSubscriptionDestinationARM.ServiceBusTopicEventSubscriptionDestination != nil {
		return json.Marshal(eventSubscriptionDestinationARM.ServiceBusTopicEventSubscriptionDestination)
	}
	if eventSubscriptionDestinationARM.StorageQueueEventSubscriptionDestination != nil {
		return json.Marshal(eventSubscriptionDestinationARM.StorageQueueEventSubscriptionDestination)
	}
	if eventSubscriptionDestinationARM.WebHookEventSubscriptionDestination != nil {
		return json.Marshal(eventSubscriptionDestinationARM.WebHookEventSubscriptionDestination)
	}
	return nil, nil
}

// UnmarshalJSON unmarshals the EventSubscriptionDestinationARM
func (eventSubscriptionDestinationARM *EventSubscriptionDestinationARM) UnmarshalJSON(data []byte) error {
	var rawJson map[string]interface{}
	err := json.Unmarshal(data, &rawJson)
	if err != nil {
		return err
	}
	discriminator := rawJson["endpointType"]
	if discriminator == "AzureFunction" {
		eventSubscriptionDestinationARM.AzureFunctionEventSubscriptionDestination = &AzureFunctionEventSubscriptionDestinationARM{}
		return json.Unmarshal(data, eventSubscriptionDestinationARM.AzureFunctionEventSubscriptionDestination)
	}
	if discriminator == "EventHub" {
		eventSubscriptionDestinationARM.EventHubEventSubscriptionDestination = &EventHubEventSubscriptionDestinationARM{}
		return json.Unmarshal(data, eventSubscriptionDestinationARM.EventHubEventSubscriptionDestination)
	}
	if discriminator == "HybridConnection" {
		eventSubscriptionDestinationARM.HybridConnectionEventSubscriptionDestination = &HybridConnectionEventSubscriptionDestinationARM{}
		return json.Unmarshal(data, eventSubscriptionDestinationARM.HybridConnectionEventSubscriptionDestination)
	}
	if discriminator == "ServiceBusQueue" {
		eventSubscriptionDestinationARM.ServiceBusQueueEventSubscriptionDestination = &ServiceBusQueueEventSubscriptionDestinationARM{}
		return json.Unmarshal(data, eventSubscriptionDestinationARM.ServiceBusQueueEventSubscriptionDestination)
	}
	if discriminator == "ServiceBusTopic" {
		eventSubscriptionDestinationARM.ServiceBusTopicEventSubscriptionDestination = &ServiceBusTopicEventSubscriptionDestinationARM{}
		return json.Unmarshal(data, eventSubscriptionDestinationARM.ServiceBusTopicEventSubscriptionDestination)
	}
	if discriminator == "StorageQueue" {
		eventSubscriptionDestinationARM.StorageQueueEventSubscriptionDestination = &StorageQueueEventSubscriptionDestinationARM{}
		return json.Unmarshal(data, eventSubscriptionDestinationARM.StorageQueueEventSubscriptionDestination)
	}
	if discriminator == "WebHook" {
		eventSubscriptionDestinationARM.WebHookEventSubscriptionDestination = &WebHookEventSubscriptionDestinationARM{}
		return json.Unmarshal(data, eventSubscriptionDestinationARM.WebHookEventSubscriptionDestination)
	}

	// No error
	return nil
}

//Generated from: https://schema.management.azure.com/schemas/2020-06-01/Microsoft.EventGrid.json#/definitions/EventSubscriptionFilter
type EventSubscriptionFilterARM struct {
	//AdvancedFilters: An array of advanced filters that are used for filtering event
	//subscriptions.
	AdvancedFilters []AdvancedFilterARM `json:"advancedFilters,omitempty"`

	//IncludedEventTypes: A list of applicable event types that need to be part of the
	//event subscription. If it is desired to subscribe to all default event types,
	//set the IncludedEventTypes to null.
	IncludedEventTypes []string `json:"includedEventTypes,omitempty"`

	//IsSubjectCaseSensitive: Specifies if the SubjectBeginsWith and SubjectEndsWith
	//properties of the filter
	//should be compared in a case sensitive manner.
	IsSubjectCaseSensitive *bool `json:"isSubjectCaseSensitive,omitempty"`

	//SubjectBeginsWith: An optional string to filter events for an event subscription
	//based on a resource path prefix.
	//The format of this depends on the publisher of the events.
	//Wildcard characters are not supported in this path.
	SubjectBeginsWith *string `json:"subjectBeginsWith,omitempty"`

	//SubjectEndsWith: An optional string to filter events for an event subscription
	//based on a resource path suffix.
	//Wildcard characters are not supported in this path.
	SubjectEndsWith *string `json:"subjectEndsWith,omitempty"`
}

//Generated from: https://schema.management.azure.com/schemas/2020-06-01/Microsoft.EventGrid.json#/definitions/RetryPolicy
type RetryPolicyARM struct {
	//EventTimeToLiveInMinutes: Time To Live (in minutes) for events.
	EventTimeToLiveInMinutes *int `json:"eventTimeToLiveInMinutes,omitempty"`

	//MaxDeliveryAttempts: Maximum number of delivery retry attempts for events.
	MaxDeliveryAttempts *int `json:"maxDeliveryAttempts,omitempty"`
}

//Generated from: https://schema.management.azure.com/schemas/2020-06-01/Microsoft.EventGrid.json#/definitions/StorageBlobDeadLetterDestination
type StorageBlobDeadLetterDestinationARM struct {
	EndpointType StorageBlobDeadLetterDestinationEndpointType `json:"endpointType"`

	//Properties: Properties of the storage blob based dead letter destination.
	Properties *StorageBlobDeadLetterDestinationPropertiesARM `json:"properties,omitempty"`
}

//Generated from: https://schema.management.azure.com/schemas/2020-06-01/Microsoft.EventGrid.json#/definitions/AdvancedFilter
type AdvancedFilterARM struct {
	//BoolEqualsAdvancedFilter: Mutually exclusive with all other properties
	BoolEqualsAdvancedFilter *AdvancedFilter_BoolEqualsAdvancedFilterARM `json:"boolEqualsAdvancedFilter,omitempty"`

	//NumberGreaterThanAdvancedFilter: Mutually exclusive with all other properties
	NumberGreaterThanAdvancedFilter *AdvancedFilter_NumberGreaterThanAdvancedFilterARM `json:"numberGreaterThanAdvancedFilter,omitempty"`

	//NumberGreaterThanOrEqualsAdvancedFilter: Mutually exclusive with all other
	//properties
	NumberGreaterThanOrEqualsAdvancedFilter *AdvancedFilter_NumberGreaterThanOrEqualsAdvancedFilterARM `json:"numberGreaterThanOrEqualsAdvancedFilter,omitempty"`

	//NumberInAdvancedFilter: Mutually exclusive with all other properties
	NumberInAdvancedFilter *AdvancedFilter_NumberInAdvancedFilterARM `json:"numberInAdvancedFilter,omitempty"`

	//NumberLessThanAdvancedFilter: Mutually exclusive with all other properties
	NumberLessThanAdvancedFilter *AdvancedFilter_NumberLessThanAdvancedFilterARM `json:"numberLessThanAdvancedFilter,omitempty"`

	//NumberLessThanOrEqualsAdvancedFilter: Mutually exclusive with all other
	//properties
	NumberLessThanOrEqualsAdvancedFilter *AdvancedFilter_NumberLessThanOrEqualsAdvancedFilterARM `json:"numberLessThanOrEqualsAdvancedFilter,omitempty"`

	//NumberNotInAdvancedFilter: Mutually exclusive with all other properties
	NumberNotInAdvancedFilter *AdvancedFilter_NumberNotInAdvancedFilterARM `json:"numberNotInAdvancedFilter,omitempty"`

	//StringBeginsWithAdvancedFilter: Mutually exclusive with all other properties
	StringBeginsWithAdvancedFilter *AdvancedFilter_StringBeginsWithAdvancedFilterARM `json:"stringBeginsWithAdvancedFilter,omitempty"`

	//StringContainsAdvancedFilter: Mutually exclusive with all other properties
	StringContainsAdvancedFilter *AdvancedFilter_StringContainsAdvancedFilterARM `json:"stringContainsAdvancedFilter,omitempty"`

	//StringEndsWithAdvancedFilter: Mutually exclusive with all other properties
	StringEndsWithAdvancedFilter *AdvancedFilter_StringEndsWithAdvancedFilterARM `json:"stringEndsWithAdvancedFilter,omitempty"`

	//StringInAdvancedFilter: Mutually exclusive with all other properties
	StringInAdvancedFilter *AdvancedFilter_StringInAdvancedFilterARM `json:"stringInAdvancedFilter,omitempty"`

	//StringNotInAdvancedFilter: Mutually exclusive with all other properties
	StringNotInAdvancedFilter *AdvancedFilter_StringNotInAdvancedFilterARM `json:"stringNotInAdvancedFilter,omitempty"`
}

// MarshalJSON defers JSON marshaling to the first non-nil property, because AdvancedFilterARM represents a discriminated union (JSON OneOf)
func (advancedFilterARM AdvancedFilterARM) MarshalJSON() ([]byte, error) {
	if advancedFilterARM.BoolEqualsAdvancedFilter != nil {
		return json.Marshal(advancedFilterARM.BoolEqualsAdvancedFilter)
	}
	if advancedFilterARM.NumberGreaterThanAdvancedFilter != nil {
		return json.Marshal(advancedFilterARM.NumberGreaterThanAdvancedFilter)
	}
	if advancedFilterARM.NumberGreaterThanOrEqualsAdvancedFilter != nil {
		return json.Marshal(advancedFilterARM.NumberGreaterThanOrEqualsAdvancedFilter)
	}
	if advancedFilterARM.NumberInAdvancedFilter != nil {
		return json.Marshal(advancedFilterARM.NumberInAdvancedFilter)
	}
	if advancedFilterARM.NumberLessThanAdvancedFilter != nil {
		return json.Marshal(advancedFilterARM.NumberLessThanAdvancedFilter)
	}
	if advancedFilterARM.NumberLessThanOrEqualsAdvancedFilter != nil {
		return json.Marshal(advancedFilterARM.NumberLessThanOrEqualsAdvancedFilter)
	}
	if advancedFilterARM.NumberNotInAdvancedFilter != nil {
		return json.Marshal(advancedFilterARM.NumberNotInAdvancedFilter)
	}
	if advancedFilterARM.StringBeginsWithAdvancedFilter != nil {
		return json.Marshal(advancedFilterARM.StringBeginsWithAdvancedFilter)
	}
	if advancedFilterARM.StringContainsAdvancedFilter != nil {
		return json.Marshal(advancedFilterARM.StringContainsAdvancedFilter)
	}
	if advancedFilterARM.StringEndsWithAdvancedFilter != nil {
		return json.Marshal(advancedFilterARM.StringEndsWithAdvancedFilter)
	}
	if advancedFilterARM.StringInAdvancedFilter != nil {
		return json.Marshal(advancedFilterARM.StringInAdvancedFilter)
	}
	if advancedFilterARM.StringNotInAdvancedFilter != nil {
		return json.Marshal(advancedFilterARM.StringNotInAdvancedFilter)
	}
	return nil, nil
}

// UnmarshalJSON unmarshals the AdvancedFilterARM
func (advancedFilterARM *AdvancedFilterARM) UnmarshalJSON(data []byte) error {
	var rawJson map[string]interface{}
	err := json.Unmarshal(data, &rawJson)
	if err != nil {
		return err
	}
	discriminator := rawJson["operatorType"]
	if discriminator == "BoolEquals" {
		advancedFilterARM.BoolEqualsAdvancedFilter = &AdvancedFilter_BoolEqualsAdvancedFilterARM{}
		return json.Unmarshal(data, advancedFilterARM.BoolEqualsAdvancedFilter)
	}
	if discriminator == "NumberGreaterThan" {
		advancedFilterARM.NumberGreaterThanAdvancedFilter = &AdvancedFilter_NumberGreaterThanAdvancedFilterARM{}
		return json.Unmarshal(data, advancedFilterARM.NumberGreaterThanAdvancedFilter)
	}
	if discriminator == "NumberGreaterThanOrEquals" {
		advancedFilterARM.NumberGreaterThanOrEqualsAdvancedFilter = &AdvancedFilter_NumberGreaterThanOrEqualsAdvancedFilterARM{}
		return json.Unmarshal(data, advancedFilterARM.NumberGreaterThanOrEqualsAdvancedFilter)
	}
	if discriminator == "NumberIn" {
		advancedFilterARM.NumberInAdvancedFilter = &AdvancedFilter_NumberInAdvancedFilterARM{}
		return json.Unmarshal(data, advancedFilterARM.NumberInAdvancedFilter)
	}
	if discriminator == "NumberLessThan" {
		advancedFilterARM.NumberLessThanAdvancedFilter = &AdvancedFilter_NumberLessThanAdvancedFilterARM{}
		return json.Unmarshal(data, advancedFilterARM.NumberLessThanAdvancedFilter)
	}
	if discriminator == "NumberLessThanOrEquals" {
		advancedFilterARM.NumberLessThanOrEqualsAdvancedFilter = &AdvancedFilter_NumberLessThanOrEqualsAdvancedFilterARM{}
		return json.Unmarshal(data, advancedFilterARM.NumberLessThanOrEqualsAdvancedFilter)
	}
	if discriminator == "NumberNotIn" {
		advancedFilterARM.NumberNotInAdvancedFilter = &AdvancedFilter_NumberNotInAdvancedFilterARM{}
		return json.Unmarshal(data, advancedFilterARM.NumberNotInAdvancedFilter)
	}
	if discriminator == "StringBeginsWith" {
		advancedFilterARM.StringBeginsWithAdvancedFilter = &AdvancedFilter_StringBeginsWithAdvancedFilterARM{}
		return json.Unmarshal(data, advancedFilterARM.StringBeginsWithAdvancedFilter)
	}
	if discriminator == "StringContains" {
		advancedFilterARM.StringContainsAdvancedFilter = &AdvancedFilter_StringContainsAdvancedFilterARM{}
		return json.Unmarshal(data, advancedFilterARM.StringContainsAdvancedFilter)
	}
	if discriminator == "StringEndsWith" {
		advancedFilterARM.StringEndsWithAdvancedFilter = &AdvancedFilter_StringEndsWithAdvancedFilterARM{}
		return json.Unmarshal(data, advancedFilterARM.StringEndsWithAdvancedFilter)
	}
	if discriminator == "StringIn" {
		advancedFilterARM.StringInAdvancedFilter = &AdvancedFilter_StringInAdvancedFilterARM{}
		return json.Unmarshal(data, advancedFilterARM.StringInAdvancedFilter)
	}
	if discriminator == "StringNotIn" {
		advancedFilterARM.StringNotInAdvancedFilter = &AdvancedFilter_StringNotInAdvancedFilterARM{}
		return json.Unmarshal(data, advancedFilterARM.StringNotInAdvancedFilter)
	}

	// No error
	return nil
}

//Generated from: https://schema.management.azure.com/schemas/2020-06-01/Microsoft.EventGrid.json#/definitions/AzureFunctionEventSubscriptionDestination
type AzureFunctionEventSubscriptionDestinationARM struct {
	EndpointType AzureFunctionEventSubscriptionDestinationEndpointType `json:"endpointType"`

	//Properties: The properties that represent the Azure Function destination of an
	//event subscription.
	Properties *AzureFunctionEventSubscriptionDestinationPropertiesARM `json:"properties,omitempty"`
}

//Generated from: https://schema.management.azure.com/schemas/2020-06-01/Microsoft.EventGrid.json#/definitions/EventHubEventSubscriptionDestination
type EventHubEventSubscriptionDestinationARM struct {
	EndpointType EventHubEventSubscriptionDestinationEndpointType `json:"endpointType"`

	//Properties: The properties for a event hub destination.
	Properties *EventHubEventSubscriptionDestinationPropertiesARM `json:"properties,omitempty"`
}

//Generated from: https://schema.management.azure.com/schemas/2020-06-01/Microsoft.EventGrid.json#/definitions/HybridConnectionEventSubscriptionDestination
type HybridConnectionEventSubscriptionDestinationARM struct {
	EndpointType HybridConnectionEventSubscriptionDestinationEndpointType `json:"endpointType"`

	//Properties: The properties for a hybrid connection destination.
	Properties *HybridConnectionEventSubscriptionDestinationPropertiesARM `json:"properties,omitempty"`
}

//Generated from: https://schema.management.azure.com/schemas/2020-06-01/Microsoft.EventGrid.json#/definitions/ServiceBusQueueEventSubscriptionDestination
type ServiceBusQueueEventSubscriptionDestinationARM struct {
	EndpointType ServiceBusQueueEventSubscriptionDestinationEndpointType `json:"endpointType"`

	//Properties: The properties that represent the Service Bus destination of an
	//event subscription.
	Properties *ServiceBusQueueEventSubscriptionDestinationPropertiesARM `json:"properties,omitempty"`
}

//Generated from: https://schema.management.azure.com/schemas/2020-06-01/Microsoft.EventGrid.json#/definitions/ServiceBusTopicEventSubscriptionDestination
type ServiceBusTopicEventSubscriptionDestinationARM struct {
	EndpointType ServiceBusTopicEventSubscriptionDestinationEndpointType `json:"endpointType"`

	//Properties: The properties that represent the Service Bus Topic destination of
	//an event subscription.
	Properties *ServiceBusTopicEventSubscriptionDestinationPropertiesARM `json:"properties,omitempty"`
}

//Generated from: https://schema.management.azure.com/schemas/2020-06-01/Microsoft.EventGrid.json#/definitions/StorageBlobDeadLetterDestinationProperties
type StorageBlobDeadLetterDestinationPropertiesARM struct {
	//BlobContainerName: The name of the Storage blob container that is the
	//destination of the deadletter events
	BlobContainerName *string `json:"blobContainerName,omitempty"`
	ResourceId        *string `json:"resourceId,omitempty"`
}

//Generated from: https://schema.management.azure.com/schemas/2020-06-01/Microsoft.EventGrid.json#/definitions/StorageQueueEventSubscriptionDestination
type StorageQueueEventSubscriptionDestinationARM struct {
	EndpointType StorageQueueEventSubscriptionDestinationEndpointType `json:"endpointType"`

	//Properties: The properties for a storage queue destination.
	Properties *StorageQueueEventSubscriptionDestinationPropertiesARM `json:"properties,omitempty"`
}

//Generated from: https://schema.management.azure.com/schemas/2020-06-01/Microsoft.EventGrid.json#/definitions/WebHookEventSubscriptionDestination
type WebHookEventSubscriptionDestinationARM struct {
	EndpointType WebHookEventSubscriptionDestinationEndpointType `json:"endpointType"`

	//Properties: Information about the webhook destination properties for an event
	//subscription.
	Properties *WebHookEventSubscriptionDestinationPropertiesARM `json:"properties,omitempty"`
}

type AdvancedFilter_BoolEqualsAdvancedFilterARM struct {
	//Key: The field/property in the event based on which you want to filter.
	Key          *string                                            `json:"key,omitempty"`
	OperatorType AdvancedFilterBoolEqualsAdvancedFilterOperatorType `json:"operatorType"`

	//Value: The boolean filter value.
	Value *bool `json:"value,omitempty"`
}

type AdvancedFilter_NumberGreaterThanAdvancedFilterARM struct {
	//Key: The field/property in the event based on which you want to filter.
	Key          *string                                                   `json:"key,omitempty"`
	OperatorType AdvancedFilterNumberGreaterThanAdvancedFilterOperatorType `json:"operatorType"`

	//Value: The filter value.
	Value *float64 `json:"value,omitempty"`
}

type AdvancedFilter_NumberGreaterThanOrEqualsAdvancedFilterARM struct {
	//Key: The field/property in the event based on which you want to filter.
	Key          *string                                                           `json:"key,omitempty"`
	OperatorType AdvancedFilterNumberGreaterThanOrEqualsAdvancedFilterOperatorType `json:"operatorType"`

	//Value: The filter value.
	Value *float64 `json:"value,omitempty"`
}

type AdvancedFilter_NumberInAdvancedFilterARM struct {
	//Key: The field/property in the event based on which you want to filter.
	Key          *string                                          `json:"key,omitempty"`
	OperatorType AdvancedFilterNumberInAdvancedFilterOperatorType `json:"operatorType"`

	//Values: The set of filter values.
	Values []float64 `json:"values,omitempty"`
}

type AdvancedFilter_NumberLessThanAdvancedFilterARM struct {
	//Key: The field/property in the event based on which you want to filter.
	Key          *string                                                `json:"key,omitempty"`
	OperatorType AdvancedFilterNumberLessThanAdvancedFilterOperatorType `json:"operatorType"`

	//Value: The filter value.
	Value *float64 `json:"value,omitempty"`
}

type AdvancedFilter_NumberLessThanOrEqualsAdvancedFilterARM struct {
	//Key: The field/property in the event based on which you want to filter.
	Key          *string                                                        `json:"key,omitempty"`
	OperatorType AdvancedFilterNumberLessThanOrEqualsAdvancedFilterOperatorType `json:"operatorType"`

	//Value: The filter value.
	Value *float64 `json:"value,omitempty"`
}

type AdvancedFilter_NumberNotInAdvancedFilterARM struct {
	//Key: The field/property in the event based on which you want to filter.
	Key          *string                                             `json:"key,omitempty"`
	OperatorType AdvancedFilterNumberNotInAdvancedFilterOperatorType `json:"operatorType"`

	//Values: The set of filter values.
	Values []float64 `json:"values,omitempty"`
}

type AdvancedFilter_StringBeginsWithAdvancedFilterARM struct {
	//Key: The field/property in the event based on which you want to filter.
	Key          *string                                                  `json:"key,omitempty"`
	OperatorType AdvancedFilterStringBeginsWithAdvancedFilterOperatorType `json:"operatorType"`

	//Values: The set of filter values.
	Values []string `json:"values,omitempty"`
}

type AdvancedFilter_StringContainsAdvancedFilterARM struct {
	//Key: The field/property in the event based on which you want to filter.
	Key          *string                                                `json:"key,omitempty"`
	OperatorType AdvancedFilterStringContainsAdvancedFilterOperatorType `json:"operatorType"`

	//Values: The set of filter values.
	Values []string `json:"values,omitempty"`
}

type AdvancedFilter_StringEndsWithAdvancedFilterARM struct {
	//Key: The field/property in the event based on which you want to filter.
	Key          *string                                                `json:"key,omitempty"`
	OperatorType AdvancedFilterStringEndsWithAdvancedFilterOperatorType `json:"operatorType"`

	//Values: The set of filter values.
	Values []string `json:"values,omitempty"`
}

type AdvancedFilter_StringInAdvancedFilterARM struct {
	//Key: The field/property in the event based on which you want to filter.
	Key          *string                                          `json:"key,omitempty"`
	OperatorType AdvancedFilterStringInAdvancedFilterOperatorType `json:"operatorType"`

	//Values: The set of filter values.
	Values []string `json:"values,omitempty"`
}

type AdvancedFilter_StringNotInAdvancedFilterARM struct {
	//Key: The field/property in the event based on which you want to filter.
	Key          *string                                             `json:"key,omitempty"`
	OperatorType AdvancedFilterStringNotInAdvancedFilterOperatorType `json:"operatorType"`

	//Values: The set of filter values.
	Values []string `json:"values,omitempty"`
}

//Generated from: https://schema.management.azure.com/schemas/2020-06-01/Microsoft.EventGrid.json#/definitions/AzureFunctionEventSubscriptionDestinationProperties
type AzureFunctionEventSubscriptionDestinationPropertiesARM struct {
	//MaxEventsPerBatch: Maximum number of events per batch.
	MaxEventsPerBatch *int `json:"maxEventsPerBatch,omitempty"`

	//PreferredBatchSizeInKilobytes: Preferred batch size in Kilobytes.
	PreferredBatchSizeInKilobytes *int    `json:"preferredBatchSizeInKilobytes,omitempty"`
	ResourceId                    *string `json:"resourceId,omitempty"`
}

//Generated from: https://schema.management.azure.com/schemas/2020-06-01/Microsoft.EventGrid.json#/definitions/EventHubEventSubscriptionDestinationProperties
type EventHubEventSubscriptionDestinationPropertiesARM struct {
	ResourceId *string `json:"resourceId,omitempty"`
}

//Generated from: https://schema.management.azure.com/schemas/2020-06-01/Microsoft.EventGrid.json#/definitions/HybridConnectionEventSubscriptionDestinationProperties
type HybridConnectionEventSubscriptionDestinationPropertiesARM struct {
	ResourceId *string `json:"resourceId,omitempty"`
}

//Generated from: https://schema.management.azure.com/schemas/2020-06-01/Microsoft.EventGrid.json#/definitions/ServiceBusQueueEventSubscriptionDestinationProperties
type ServiceBusQueueEventSubscriptionDestinationPropertiesARM struct {
	ResourceId *string `json:"resourceId,omitempty"`
}

//Generated from: https://schema.management.azure.com/schemas/2020-06-01/Microsoft.EventGrid.json#/definitions/ServiceBusTopicEventSubscriptionDestinationProperties
type ServiceBusTopicEventSubscriptionDestinationPropertiesARM struct {
	ResourceId *string `json:"resourceId,omitempty"`
}

//Generated from: https://schema.management.azure.com/schemas/2020-06-01/Microsoft.EventGrid.json#/definitions/StorageQueueEventSubscriptionDestinationProperties
type StorageQueueEventSubscriptionDestinationPropertiesARM struct {
	//QueueName: The name of the Storage queue under a storage account that is the
	//destination of an event subscription.
	QueueName  *string `json:"queueName,omitempty"`
	ResourceId *string `json:"resourceId,omitempty"`
}

//Generated from: https://schema.management.azure.com/schemas/2020-06-01/Microsoft.EventGrid.json#/definitions/WebHookEventSubscriptionDestinationProperties
type WebHookEventSubscriptionDestinationPropertiesARM struct {
	//AzureActiveDirectoryApplicationIdOrUri: The Azure Active Directory Application
	//ID or URI to get the access token that will be included as the bearer token in
	//delivery requests.
	AzureActiveDirectoryApplicationIdOrUri *string `json:"azureActiveDirectoryApplicationIdOrUri,omitempty"`

	//AzureActiveDirectoryTenantId: The Azure Active Directory Tenant ID to get the
	//access token that will be included as the bearer token in delivery requests.
	AzureActiveDirectoryTenantId *string `json:"azureActiveDirectoryTenantId,omitempty"`

	//EndpointUrl: The URL that represents the endpoint of the destination of an event
	//subscription.
	EndpointUrl *string `json:"endpointUrl,omitempty"`

	//MaxEventsPerBatch: Maximum number of events per batch.
	MaxEventsPerBatch *int `json:"maxEventsPerBatch,omitempty"`

	//PreferredBatchSizeInKilobytes: Preferred batch size in Kilobytes.
	PreferredBatchSizeInKilobytes *int `json:"preferredBatchSizeInKilobytes,omitempty"`
}
